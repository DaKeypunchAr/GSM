import { Text, TextStyle } from "text.slint";
import { Colors } from "colors.slint";
import { DesignData } from "design_data.slint";

component PageLink {
  callback clicked <=> area.clicked;
  in property<string> name: "No Name";
  in property<bool> is_selected: false;

  Rectangle {
    area := TouchArea {}
    HorizontalLayout {
      alignment: LayoutAlignment.start;
      spacing: 32px;

      VerticalLayout {
        alignment: LayoutAlignment.center;
        Rectangle {
          width: 8px;
          height: 16px;
          border-radius: 4px;
          background: is_selected ? Colors.d_gray : transparent;
        }
      }

      VerticalLayout {
        alignment: LayoutAlignment.center;
        Text {
          in_text: name;
          in_color: is_selected ? Colors.d_gray : Colors.m_gray;
          style: TextStyle.H5;
        }
      }
    }
  }
}

export component SideBar {
  callback clicked(int);
  in property<DesignData> des_data;
  in property<[string]> pages;
  in property<int> selected_page;

  property<length> win_width: 16px * des_data.win_scale;
  property<length> win_height: 9px * des_data.win_scale;
  property<length> col_width: (win_width - (2 * des_data.padding) - (11 * des_data.gutter)) / des_data.columns;

  VerticalLayout {
    alignment: LayoutAlignment.start;

    Rectangle {
      background: Colors.l_gray;
      width: col_width * 2 + des_data.gutter + des_data.padding;
      height: win_height - (0.6px * des_data.win_scale);

      VerticalLayout {
        spacing: 8px;
        padding-left: des_data.padding;
        padding-right: des_data.padding;

        property<length> vertical_padding: 0.2px * des_data.win_scale;
        padding-top: vertical_padding;
        padding-bottom: vertical_padding;

        alignment: LayoutAlignment.start;

        for page[i] in pages : VerticalLayout {
          spacing: vertical_padding;
          padding-bottom: self.spacing / 2;
          PageLink {
            name: page;
            is_selected: i == selected_page;
            clicked => {
              clicked(i);
            }
          }

          if i != pages.length - 1 : Rectangle {
            height: 2px;
            background: Colors.m_gray;
          }
        }
      }
    }
  }
}
