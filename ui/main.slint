// Data Structures
import { DesignData } from "design_data.slint";
import { Colors } from "colors.slint";
import { DealerData, ProductData, ProductDealersConnection, ComparisonProductSelectionInput, ComparisonTableInput, ProductSearchInput, DealerSearchInput, Mode } from "data_structures.slint";

// Layout Abstractions
import { Header } from "header.slint";
import { SideBar } from "sidebar.slint";
import { ComparisonLayout } from "comparison.slint";
import { ProductPageLayout } from "product_page.slint";
import { DealerPageLayout } from "dealer_page.slint";

struct Data {
  comparison_product_selection_input: ComparisonProductSelectionInput,
  comparison_table_input: ComparisonTableInput,
  product_search_input: ProductSearchInput,
  dealer_search_input: DealerSearchInput,
}

export component MainWindow inherits Window {
  width: 16px * self.design_data.win_scale;
  height: 9px * self.design_data.win_scale;
  background: Colors.vd_gray;

  // Design info
  property<DesignData> design_data: {
    win-scale: 100,
    padding: 40px,
    gutter: 16px,
    columns: 12
  };

  // Data input - common
  property<[string]> pages_name: [
    "Comparison Table",
    "Products",
    "Dealers",
  ];
  property<[Mode]> pages_initial_mode: [
    Mode.ComparisonProductSelection,
    Mode.ProductSearch,
    Mode.DealerSearch,
  ];
  in-out property<int> selected_page: 0;
  in-out property<bool> sidebar_activated: true;

  in-out property<Mode> mode;
  in property<Data> input_data;

  // Callbacks
  callback mode_changed();
  callback add_product();
  callback add_dealer();

  VerticalLayout {
    alignment: start;
    Header {
      header_title: pages_name[selected_page];
      des_data: design_data;
      onHamburgerMenu => {
        sidebar_activated = !sidebar_activated;
      }
    }

    HorizontalLayout {
      if sidebar_activated : SideBar {
        des_data: design_data;
        pages: pages_name;
        selected_page: selected_page;
        clicked(idx) => {
          selected_page = idx;
          mode = pages_initial_mode[idx];
          mode_changed();
        }
      }

      if selected_page == 0 : ComparisonLayout {
        des_data: design_data;
        product_selection_input: input_data.comparison_product_selection_input;
        table_input: input_data.comparison_table_input;
        mode: mode;

        product_selected => {
          mode = Mode.ComparisonTable;
          mode_changed();
        }
      }
      if selected_page == 1 : ProductPageLayout {
        des_data: design_data;
        sidebar_activated: sidebar_activated;
        product_search_input: input_data.product_search_input;
        mode: mode;

        add_product_mode => {
          mode = Mode.ProductAdd;
          mode_changed();
        }
        cancel_add_product_mode => {
          mode = Mode.ProductSearch;
          mode_changed();
        }
        add_the_product => {
          add_product();
          mode = Mode.ProductSearch;
          mode_changed();
        }
      }
      if selected_page == 2 : DealerPageLayout {
        des_data: design_data;
        sidebar_activated: sidebar_activated;
        dealer_search_input: input_data.dealer_search_input;
        mode: mode;

        dealer_add_mode => {
          mode = Mode.DealerAdd;
          mode_changed();
        }
        cancel_dealer_add_mode => {
          mode = Mode.DealerSearch;
          mode_changed();
        }
        add_the_dealer => {
          add_dealer();
          mode = Mode.DealerSearch;
          mode_changed();
        }
      }
    }
  }
}
